{"dependencies":[{"name":"react"},{"name":"react-dom"},{"name":"prop-types"},{"name":"./modal.css"},{"name":"../../libs/Icon/index"},{"name":"./confirm"},{"name":"./tool"}],"generated":{"js":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.Modal = undefined;\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _react = require(\"react\");\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _reactDom = require(\"react-dom\");\n\nvar _propTypes = require(\"prop-types\");\n\nvar _propTypes2 = _interopRequireDefault(_propTypes);\n\nrequire(\"./modal.css\");\n\nvar _index = require(\"../../libs/Icon/index\");\n\nvar _confirm = require(\"./confirm\");\n\nvar _tool = require(\"./tool\");\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nvar Modal = exports.Modal = function (_Component) {\n  _inherits(Modal, _Component);\n\n  function Modal(props) {\n    _classCallCheck(this, Modal);\n\n    var _this = _possibleConstructorReturn(this, (Modal.__proto__ || Object.getPrototypeOf(Modal)).call(this, props));\n\n    _this.state = {\n      _visible: false\n    };\n    return _this;\n  }\n\n  _createClass(Modal, [{\n    key: \"_closeModal\",\n    value: function _closeModal(e) {\n      this.setState({ _visible: false });\n    }\n  }, {\n    key: \"_clickHandle\",\n    value: function _clickHandle(e) {\n      var target = e.target;\n      if (target.title == 'cancel') {\n        this.props.onCancel();\n      } else {\n        this.props.onSure();\n      }\n    }\n  }, {\n    key: \"_renderHeader\",\n    value: function _renderHeader(title) {\n      return _react2.default.createElement(\n        \"header\",\n        {\n          className: \"dc-modal-header\"\n        },\n        _react2.default.createElement(\n          \"div\",\n          null,\n          title\n        ),\n        _react2.default.createElement(\n          \"div\",\n          { className: \"dc-modal-icon\", onClick: this._closeModal.bind(this) },\n          _react2.default.createElement(_index.Icon, { type: \"close\" })\n        )\n      );\n    }\n  }, {\n    key: \"_renderLoading\",\n    value: function _renderLoading() {\n      return _react2.default.createElement(\n        \"div\",\n        null,\n        _react2.default.createElement(\n          \"span\",\n          { className: \"dc-modal-loading\" },\n          _react2.default.createElement(_index.Icon, { type: \"circle-loading\", circle: true, width: \"14px\", height: \"14px\" })\n        ),\n        \"\\u8BF7\\u7B49\\u5F85\"\n      );\n    }\n  }, {\n    key: \"_renderModal\",\n    value: function _renderModal() {\n      var _props = this.props,\n          content = _props.content,\n          title = _props.title,\n          children = _props.children,\n          text = _props.text,\n          _props$musk = _props.musk,\n          musk = _props$musk === undefined ? true : _props$musk;\n\n      var modalContent = children || content;\n      return _react2.default.createElement(\n        \"div\",\n        null,\n        musk ? _react2.default.createElement(\"div\", { className: \"dc-modal-musk\" }) : '',\n        _react2.default.createElement(\n          \"div\",\n          { className: \"dc-modal-content\" },\n          title ? this._renderHeader(title) : '',\n          _react2.default.createElement(\n            \"article\",\n            { className: \"dc-modal-body\" },\n            modalContent\n          ),\n          _react2.default.createElement(\n            \"footer\",\n            { className: \"dc-modal-footer\", onClick: this._clickHandle.bind(this) },\n            _react2.default.createElement(\n              \"span\",\n              { className: \"dc-modal-btn\", title: \"cancel\" },\n              text && text.cancel ? text.cancel : '关闭'\n            ),\n            _react2.default.createElement(\n              \"span\",\n              { className: \"dc-modal-btn dc-modal-sure\", title: \"sure\" },\n              this.props.confirmLoading ? this._renderLoading() : text && text.sure ? text.sure : '确定'\n            )\n          )\n        )\n      );\n    }\n  }, {\n    key: \"componentWillReceiveProps\",\n    value: function componentWillReceiveProps(newProps) {\n      this.setState({ _visible: newProps.visible });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _visible = this.state._visible;\n\n      return _react2.default.createElement(\n        \"div\",\n        null,\n        _visible ? this._renderModal() : ''\n      );\n    }\n  }], [{\n    key: \"confirm\",\n    value: function confirm(spec) {\n      (0, _tool._renderComponent)(\"div\", \"confirm\")(_confirm.Confirm, spec);\n    }\n  }]);\n\n  return Modal;\n}(_react.Component);\n\nModal.propTypes = {\n  visible: _propTypes2.default.bool.isRequired,\n  content: function content(props, propName, componentName) {\n    if (!props[propName]) {\n      throw new Error(\"content is require in \" + componentName);\n    }\n  },\n  onCancel: _propTypes2.default.func.isRequired,\n  onSure: _propTypes2.default.func.isRequired\n};"},"hash":"63f31ebbf2b5bbc671afce8f3a597132"}