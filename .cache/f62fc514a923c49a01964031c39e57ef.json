{"dependencies":[{"name":"react","loc":{"line":7,"column":18}},{"name":"immutable","loc":{"line":8,"column":20}},{"name":"./ToolbarLine","loc":{"line":9,"column":24}}],"generated":{"js":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nvar _react = require(\"react\");\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _immutable = require(\"immutable\");\n\nvar _ToolbarLine = require(\"./ToolbarLine\");\n\nvar _ToolbarLine2 = _interopRequireDefault(_ToolbarLine);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (!self) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }return call && ((typeof call === \"undefined\" ? \"undefined\" : _typeof(call)) === \"object\" || typeof call === \"function\") ? call : self;\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function, not \" + (typeof superClass === \"undefined\" ? \"undefined\" : _typeof(superClass)));\n  }subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } });if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n}\n\nfunction noop() {}\n\nvar Toolbar = function (_React$Component) {\n  _inherits(Toolbar, _React$Component);\n\n  function Toolbar(props) {\n    _classCallCheck(this, Toolbar);\n\n    var _this = _possibleConstructorReturn(this, _React$Component.call(this, props));\n\n    var map = {};\n    props.plugins.forEach(function (plugin) {\n      map[plugin.name] = plugin;\n    });\n    _this.pluginsMap = (0, _immutable.Map)(map);\n    _this.state = {\n      editorState: props.editorState,\n      toolbars: []\n    };\n    return _this;\n  }\n\n  Toolbar.prototype.renderToolbarItem = function renderToolbarItem(pluginName, idx) {\n    var element = this.pluginsMap.get(pluginName);\n    if (element && element.component) {\n      var component = element.component;\n\n      var props = {\n        key: 'toolbar-item-' + idx,\n        onClick: component.props ? component.props.onClick : noop\n      };\n      if (_react2.default.isValidElement(component)) {\n        return _react2.default.cloneElement(component, props);\n      }\n      return _react2.default.createElement(component, props);\n    }\n    return null;\n  };\n\n  Toolbar.prototype.conpomentWillReceiveProps = function conpomentWillReceiveProps(nextProps) {\n    this.render();\n  };\n\n  Toolbar.prototype.render = function render() {\n    var _this2 = this;\n\n    var _props = this.props,\n        toolbars = _props.toolbars,\n        prefixCls = _props.prefixCls;\n\n    return _react2.default.createElement('div', { className: prefixCls + '-toolbar' }, toolbars.map(function (toolbar, idx) {\n      var children = _react2.default.Children.map(toolbar, _this2.renderToolbarItem.bind(_this2));\n      return _react2.default.createElement(_ToolbarLine2.default, { key: 'toolbar-' + idx }, children);\n    }));\n  };\n\n  return Toolbar;\n}(_react2.default.Component);\n\nexports.default = Toolbar;"},"hash":"8153ac0549eec0f1d521085480cf00bb"}