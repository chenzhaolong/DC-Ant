{"dependencies":[{"name":"react"},{"name":"react-dom"},{"name":"./row.css"}],"generated":{"js":"var global = (1,eval)(\"this\");\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.Row = undefined;\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _react = require(\"react\");\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _reactDom = require(\"react-dom\");\n\nvar _reactDom2 = _interopRequireDefault(_reactDom);\n\nrequire(\"./row.css\");\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nvar Row = exports.Row = function (_Component) {\n  _inherits(Row, _Component);\n\n  function Row(props) {\n    _classCallCheck(this, Row);\n\n    var _this = _possibleConstructorReturn(this, (Row.__proto__ || Object.getPrototypeOf(Row)).call(this, props));\n\n    _this.state = {\n      grid: '',\n      privateStyle: ['marginTop', 'marginBottom', 'marginLeft', 'marginRight', 'margin', 'padding', 'paddingTop', 'paddingBottom', 'paddingLeft', 'paddingRight']\n    };\n    return _this;\n  }\n\n  _createClass(Row, [{\n    key: \"componentWillMount\",\n    value: function componentWillMount() {\n      if (!global.window || !window.document) return 0;\n      var screenWidth = document.documentElement.clientWidth;\n      this.setState({ grid: Math.round(screenWidth / 24) });\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this._isOverCurrentScreenWidth();\n      this._receivePrivateStyle();\n    }\n  }, {\n    key: \"_computeColSize\",\n    value: function _computeColSize(num) {\n      var span = num ? num : 1;\n      if (span - Math.round(span) > 0) span = Math.round(span);\n      return span * this.state.grid + 'px';\n    }\n  }, {\n    key: \"_showCol\",\n    value: function _showCol() {\n      var _this2 = this;\n\n      var children = this.props.children;\n\n      return _react2.default.Children.map(children, function (child) {\n        var colSize = _this2._computeColSize(child.props.span);\n        return _react2.default.createElement(\n          \"div\",\n          {\n            className: \"dc-row\",\n            style: { width: colSize }\n          },\n          child\n        );\n      });\n    }\n  }, {\n    key: \"_isOverCurrentScreenWidth\",\n    value: function _isOverCurrentScreenWidth() {\n      var parent = _reactDom2.default.findDOMNode(this.refs.parent);\n      var children = Array.from(parent.childNodes);\n      var totalWidth = children.reduce(function (sum, item) {\n        return sum += parseInt(item.style.width);\n      }, 0);\n      if (totalWidth > document.documentElement.clientWidth) {\n        throw new Error('the total width of component of Row is over current screen!');\n      }\n    }\n  }, {\n    key: \"_receivePrivateStyle\",\n    value: function _receivePrivateStyle() {\n      var _this3 = this;\n\n      var parent = _reactDom2.default.findDOMNode(this.refs.parent);\n      var _privateStyleArr = this.state.privateStyle.map(function (item) {\n        return {\n          key: item,\n          value: _this3.props[item]\n        };\n      });\n      _privateStyleArr = _privateStyleArr.filter(function (item) {\n        return item.value ? true : false;\n      });\n      _privateStyleArr.forEach(function (item) {\n        parent.style[item.key] = item.value + 'px';\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return _react2.default.createElement(\n        \"div\",\n        {\n          ref: \"parent\",\n          className: this.props.className\n        },\n        this._showCol()\n      );\n    }\n  }]);\n\n  return Row;\n}(_react.Component);"},"hash":"f8e1115e13ef052dc85473e05bf2212f"}