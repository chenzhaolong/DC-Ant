{"dependencies":[{"name":"react","loc":{"line":1,"column":23}},{"name":"rc-notification","loc":{"line":2,"column":25}},{"name":"../icon","loc":{"line":3,"column":17}}],"generated":{"js":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _react = require(\"react\");\n\nvar React = _interopRequireWildcard(_react);\n\nvar _rcNotification = require(\"rc-notification\");\n\nvar _rcNotification2 = _interopRequireDefault(_rcNotification);\n\nvar _icon = require(\"../icon\");\n\nvar _icon2 = _interopRequireDefault(_icon);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }\n\nvar defaultDuration = 3;\nvar defaultTop = void 0;\nvar messageInstance = void 0;\nvar key = 1;\nvar prefixCls = 'ant-message';\nvar getContainer = void 0;\nfunction getMessageInstance(callback) {\n  if (messageInstance) {\n    callback(messageInstance);\n    return;\n  }\n  _rcNotification2.default.newInstance({\n    prefixCls: prefixCls,\n    transitionName: 'move-up',\n    style: { top: defaultTop },\n    getContainer: getContainer\n  }, function (instance) {\n    if (messageInstance) {\n      callback(messageInstance);\n      return;\n    }\n    messageInstance = instance;\n    callback(instance);\n  });\n}\nfunction notice(content) {\n  var duration = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : defaultDuration;\n  var type = arguments[2];\n  var onClose = arguments[3];\n\n  var iconType = {\n    info: 'info-circle',\n    success: 'check-circle',\n    error: 'cross-circle',\n    warning: 'exclamation-circle',\n    loading: 'loading'\n  }[type];\n  if (typeof duration === 'function') {\n    onClose = duration;\n    duration = defaultDuration;\n  }\n  var target = key++;\n  getMessageInstance(function (instance) {\n    instance.notice({\n      key: target,\n      duration: duration,\n      style: {},\n      content: React.createElement('div', { className: prefixCls + '-custom-content ' + prefixCls + '-' + type }, React.createElement(_icon2.default, { type: iconType }), React.createElement('span', null, content)),\n      onClose: onClose\n    });\n  });\n  return function () {\n    if (messageInstance) {\n      messageInstance.removeNotice(target);\n    }\n  };\n}\nexports.default = {\n  info: function info(content, duration, onClose) {\n    return notice(content, duration, 'info', onClose);\n  },\n  success: function success(content, duration, onClose) {\n    return notice(content, duration, 'success', onClose);\n  },\n  error: function error(content, duration, onClose) {\n    return notice(content, duration, 'error', onClose);\n  },\n\n  // Departed usage, please use warning()\n  warn: function warn(content, duration, onClose) {\n    return notice(content, duration, 'warning', onClose);\n  },\n  warning: function warning(content, duration, onClose) {\n    return notice(content, duration, 'warning', onClose);\n  },\n  loading: function loading(content, duration, onClose) {\n    return notice(content, duration, 'loading', onClose);\n  },\n  config: function config(options) {\n    if (options.top !== undefined) {\n      defaultTop = options.top;\n      messageInstance = null; // delete messageInstance for new defaultTop\n    }\n    if (options.duration !== undefined) {\n      defaultDuration = options.duration;\n    }\n    if (options.prefixCls !== undefined) {\n      prefixCls = options.prefixCls;\n    }\n    if (options.getContainer !== undefined) {\n      getContainer = options.getContainer;\n    }\n  },\n  destroy: function destroy() {\n    if (messageInstance) {\n      messageInstance.destroy();\n      messageInstance = null;\n    }\n  }\n};"},"hash":"13e1e8936c184de9c66ae869b5132b5b"}