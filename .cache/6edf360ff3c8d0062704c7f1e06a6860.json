{"dependencies":[{"name":"babel-runtime/helpers/extends","loc":{"line":1,"column":21}},{"name":"react","loc":{"line":5,"column":23}},{"name":"react-dom","loc":{"line":6,"column":26}},{"name":"classnames","loc":{"line":7,"column":23}},{"name":"../icon","loc":{"line":8,"column":17}},{"name":"./Modal","loc":{"line":9,"column":19}},{"name":"./ActionButton","loc":{"line":10,"column":25}},{"name":"./locale","loc":{"line":11,"column":33}}],"generated":{"js":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = confirm;\n\nvar _extends2 = require(\"babel-runtime/helpers/extends\");\n\nvar _extends3 = _interopRequireDefault(_extends2);\n\nvar _react = require(\"react\");\n\nvar React = _interopRequireWildcard(_react);\n\nvar _reactDom = require(\"react-dom\");\n\nvar ReactDOM = _interopRequireWildcard(_reactDom);\n\nvar _classnames = require(\"classnames\");\n\nvar _classnames2 = _interopRequireDefault(_classnames);\n\nvar _icon = require(\"../icon\");\n\nvar _icon2 = _interopRequireDefault(_icon);\n\nvar _Modal = require(\"./Modal\");\n\nvar _Modal2 = _interopRequireDefault(_Modal);\n\nvar _ActionButton = require(\"./ActionButton\");\n\nvar _ActionButton2 = _interopRequireDefault(_ActionButton);\n\nvar _locale = require(\"./locale\");\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar _this = undefined;\n\nvar IS_REACT_16 = !!ReactDOM.createPortal;\nvar ConfirmDialog = function ConfirmDialog(props) {\n  var onCancel = props.onCancel,\n      onOk = props.onOk,\n      close = props.close,\n      zIndex = props.zIndex,\n      afterClose = props.afterClose,\n      visible = props.visible;\n\n  var iconType = props.iconType || 'question-circle';\n  var okType = props.okType || 'primary';\n  var prefixCls = props.prefixCls || 'ant-confirm';\n  // 默认为 true，保持向下兼容\n  var okCancel = 'okCancel' in props ? props.okCancel : true;\n  var width = props.width || 416;\n  var style = props.style || {};\n  // 默认为 false，保持旧版默认行为\n  var maskClosable = props.maskClosable === undefined ? false : props.maskClosable;\n  var runtimeLocale = (0, _locale.getConfirmLocale)();\n  var okText = props.okText || (okCancel ? runtimeLocale.okText : runtimeLocale.justOkText);\n  var cancelText = props.cancelText || runtimeLocale.cancelText;\n  var classString = (0, _classnames2.default)(prefixCls, prefixCls + '-' + props.type, props.className);\n  var cancelButton = okCancel && React.createElement(_ActionButton2.default, { actionFn: onCancel, closeModal: close }, cancelText);\n  return React.createElement(_Modal2.default, { className: classString, onCancel: close.bind(_this, { triggerCancel: true }), visible: visible, title: '', transitionName: 'zoom', footer: '', maskTransitionName: 'fade', maskClosable: maskClosable, style: style, width: width, zIndex: zIndex, afterClose: afterClose }, React.createElement('div', { className: prefixCls + '-body-wrapper' }, React.createElement('div', { className: prefixCls + '-body' }, React.createElement(_icon2.default, { type: iconType }), React.createElement('span', { className: prefixCls + '-title' }, props.title), React.createElement('div', { className: prefixCls + '-content' }, props.content)), React.createElement('div', { className: prefixCls + '-btns' }, cancelButton, React.createElement(_ActionButton2.default, { type: okType, actionFn: onOk, closeModal: close, autoFocus: true }, okText))));\n};\nfunction confirm(config) {\n  var div = document.createElement('div');\n  document.body.appendChild(div);\n  function close() {\n    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    if (IS_REACT_16) {\n      render((0, _extends3.default)({}, config, { close: close, visible: false, afterClose: destroy.bind.apply(destroy, [this].concat(args)) }));\n    } else {\n      destroy.apply(undefined, args);\n    }\n  }\n  function destroy() {\n    var unmountResult = ReactDOM.unmountComponentAtNode(div);\n    if (unmountResult && div.parentNode) {\n      div.parentNode.removeChild(div);\n    }\n\n    for (var _len2 = arguments.length, args = Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n      args[_key2] = arguments[_key2];\n    }\n\n    var triggerCancel = args && args.length && args.some(function (param) {\n      return param && param.triggerCancel;\n    });\n    if (config.onCancel && triggerCancel) {\n      config.onCancel.apply(config, args);\n    }\n  }\n  function render(props) {\n    ReactDOM.render(React.createElement(ConfirmDialog, props), div);\n  }\n  render((0, _extends3.default)({}, config, { visible: true, close: close }));\n  return {\n    destroy: close\n  };\n}"},"hash":"3ff82c44a2fd24698f3647abb1389e65"}