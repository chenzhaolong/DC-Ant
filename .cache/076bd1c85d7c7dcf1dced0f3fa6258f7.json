{"dependencies":[{"name":"react"},{"name":"prop-types"},{"name":"./pop.css"}],"generated":{"js":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.Pop = undefined;\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _react = require(\"react\");\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _propTypes = require(\"prop-types\");\n\nvar _propTypes2 = _interopRequireDefault(_propTypes);\n\nrequire(\"./pop.css\");\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nvar Pop = exports.Pop = function (_Component) {\n  _inherits(Pop, _Component);\n\n  function Pop(props) {\n    _classCallCheck(this, Pop);\n\n    var _this = _possibleConstructorReturn(this, (Pop.__proto__ || Object.getPrototypeOf(Pop)).call(this, props));\n\n    _this.state = {\n      showContent: false,\n      position: {\n        left: '',\n        top: ''\n      }\n    };\n    return _this;\n  }\n\n  _createClass(Pop, [{\n    key: \"_handleOnMouseEnter\",\n    value: function _handleOnMouseEnter(e) {\n      this.setState({ showContent: true });\n    }\n  }, {\n    key: \"_handleOnMouseLeave\",\n    value: function _handleOnMouseLeave(e) {\n      this.setState({ showContent: false });\n    }\n  }, {\n    key: \"_handleOnClick\",\n    value: function _handleOnClick(e) {\n      this.setState({ showContent: true });\n    }\n  }, {\n    key: \"_setTouchEleOffset\",\n    value: function _setTouchEleOffset() {\n      var btn = this.refs.btn;\n      var position = {\n        left: btn.offsetLeft,\n        top: btn.offsetTop\n      };\n      this.setState({ position: position });\n    }\n  }, {\n    key: \"_touchOuterTrigger\",\n    value: function _touchOuterTrigger() {\n      var triggerMode = this.props.trigger ? this.props.trigger : 'hover';\n      var parent = this.refs.parent;\n      if (triggerMode == 'hover') {\n        parent.addEventListener('mouseenter', this._handleOnMouseEnter.bind(this), false);\n        parent.addEventListener('mouseleave', this._handleOnMouseLeave.bind(this), false);\n      } else {\n        parent.addEventListener('click', this._handleOnClick.bind(this), false);\n      }\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this._setTouchEleOffset();\n      this._touchOuterTrigger();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return _react2.default.createElement(\n        \"div\",\n        {\n          ref: \"parent\",\n          className: ['dc-defaultPop', this.props.className].join(' ')\n        },\n        this.state.showContent ? _react2.default.createElement(PopContent, {\n          content: this.props.content,\n          position: this.state.position\n        }) : '',\n        _react2.default.createElement(\n          \"button\",\n          {\n            className: \"dc-pop\",\n            ref: \"btn\"\n          },\n          this.props.children\n        )\n      );\n    }\n  }]);\n\n  return Pop;\n}(_react.Component);\n\nvar PopContent = function (_PureComponent) {\n  _inherits(PopContent, _PureComponent);\n\n  function PopContent(props) {\n    _classCallCheck(this, PopContent);\n\n    var _this2 = _possibleConstructorReturn(this, (PopContent.__proto__ || Object.getPrototypeOf(PopContent)).call(this, props));\n\n    _this2.state = {\n      _position: _this2.props.position\n    };\n    return _this2;\n  }\n\n  _createClass(PopContent, [{\n    key: \"render\",\n    value: function render() {\n      return _react2.default.createElement(\n        \"div\",\n        {\n          className: \"dc-pop-open\",\n          style: this.state._position,\n          ref: \"popContent\"\n        },\n        this.props.content\n      );\n    }\n  }, {\n    key: \"_computeContentPosition\",\n    value: function _computeContentPosition() {\n      var popContent = this.refs.popContent;\n      var _props$position = this.props.position,\n          top = _props$position.top,\n          left = _props$position.left;\n\n      var contentPosition = {\n        left: left,\n        top: top - popContent.offsetHeight\n      };\n      this.setState({ _position: contentPosition });\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this._computeContentPosition();\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {}\n  }]);\n\n  return PopContent;\n}(_react.PureComponent);"},"hash":"b957a84126b66e347402960987256d5f"}