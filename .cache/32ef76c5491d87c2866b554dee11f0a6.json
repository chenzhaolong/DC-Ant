{"dependencies":[{"name":"babel-runtime/helpers/classCallCheck","loc":{"line":1,"column":28}},{"name":"babel-runtime/helpers/createClass","loc":{"line":2,"column":25}},{"name":"babel-runtime/helpers/possibleConstructorReturn","loc":{"line":3,"column":39}},{"name":"babel-runtime/helpers/inherits","loc":{"line":4,"column":22}},{"name":"react","loc":{"line":5,"column":23}},{"name":"./Constants","loc":{"line":6,"column":27}},{"name":"../select","loc":{"line":7,"column":19}},{"name":"../radio","loc":{"line":8,"column":30}}],"generated":{"js":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _classCallCheck2 = require(\"babel-runtime/helpers/classCallCheck\");\n\nvar _classCallCheck3 = _interopRequireDefault(_classCallCheck2);\n\nvar _createClass2 = require(\"babel-runtime/helpers/createClass\");\n\nvar _createClass3 = _interopRequireDefault(_createClass2);\n\nvar _possibleConstructorReturn2 = require(\"babel-runtime/helpers/possibleConstructorReturn\");\n\nvar _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);\n\nvar _inherits2 = require(\"babel-runtime/helpers/inherits\");\n\nvar _inherits3 = _interopRequireDefault(_inherits2);\n\nvar _react = require(\"react\");\n\nvar React = _interopRequireWildcard(_react);\n\nvar _Constants = require(\"./Constants\");\n\nvar _select = require(\"../select\");\n\nvar _select2 = _interopRequireDefault(_select);\n\nvar _radio = require(\"../radio\");\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar Option = _select2.default.Option;\n\nvar Header = function (_React$Component) {\n  (0, _inherits3.default)(Header, _React$Component);\n\n  function Header() {\n    (0, _classCallCheck3.default)(this, Header);\n\n    var _this = (0, _possibleConstructorReturn3.default)(this, (Header.__proto__ || Object.getPrototypeOf(Header)).apply(this, arguments));\n\n    _this.onYearChange = function (year) {\n      var newValue = _this.props.value.clone();\n      newValue.year(parseInt(year, 10));\n      var onValueChange = _this.props.onValueChange;\n      if (onValueChange) {\n        onValueChange(newValue);\n      }\n    };\n    _this.onMonthChange = function (month) {\n      var newValue = _this.props.value.clone();\n      newValue.month(parseInt(month, 10));\n      var onValueChange = _this.props.onValueChange;\n      if (onValueChange) {\n        onValueChange(newValue);\n      }\n    };\n    _this.onTypeChange = function (e) {\n      var onTypeChange = _this.props.onTypeChange;\n      if (onTypeChange) {\n        onTypeChange(e.target.value);\n      }\n    };\n    _this.getCalenderHeaderNode = function (node) {\n      _this.calenderHeaderNode = node;\n    };\n    return _this;\n  }\n\n  (0, _createClass3.default)(Header, [{\n    key: 'getYearSelectElement',\n    value: function getYearSelectElement(year) {\n      var _this2 = this;\n\n      var _props = this.props,\n          yearSelectOffset = _props.yearSelectOffset,\n          yearSelectTotal = _props.yearSelectTotal,\n          locale = _props.locale,\n          prefixCls = _props.prefixCls,\n          fullscreen = _props.fullscreen;\n\n      var start = year - yearSelectOffset;\n      var end = start + yearSelectTotal;\n      var suffix = locale.year === '年' ? '年' : '';\n      var options = [];\n      for (var index = start; index < end; index++) {\n        options.push(React.createElement(Option, { key: '' + index }, index + suffix));\n      }\n      return React.createElement(_select2.default, { size: fullscreen ? 'default' : 'small', dropdownMatchSelectWidth: false, className: prefixCls + '-year-select', onChange: this.onYearChange, value: String(year), getPopupContainer: function getPopupContainer() {\n          return _this2.calenderHeaderNode;\n        } }, options);\n    }\n  }, {\n    key: 'getMonthsLocale',\n    value: function getMonthsLocale(value) {\n      var current = value.clone();\n      var localeData = value.localeData();\n      var months = [];\n      for (var i = 0; i < 12; i++) {\n        current.month(i);\n        months.push(localeData.monthsShort(current));\n      }\n      return months;\n    }\n  }, {\n    key: 'getMonthSelectElement',\n    value: function getMonthSelectElement(month, months) {\n      var _this3 = this;\n\n      var props = this.props;\n      var prefixCls = props.prefixCls,\n          fullscreen = props.fullscreen;\n\n      var options = [];\n      for (var index = 0; index < 12; index++) {\n        options.push(React.createElement(Option, { key: '' + index }, months[index]));\n      }\n      return React.createElement(_select2.default, { size: fullscreen ? 'default' : 'small', dropdownMatchSelectWidth: false, className: prefixCls + '-month-select', value: String(month), onChange: this.onMonthChange, getPopupContainer: function getPopupContainer() {\n          return _this3.calenderHeaderNode;\n        } }, options);\n    }\n  }, {\n    key: 'render',\n    value: function render() {\n      var _props2 = this.props,\n          type = _props2.type,\n          value = _props2.value,\n          prefixCls = _props2.prefixCls,\n          locale = _props2.locale,\n          fullscreen = _props2.fullscreen;\n\n      var yearSelect = this.getYearSelectElement(value.year());\n      var monthSelect = type === 'date' ? this.getMonthSelectElement(value.month(), this.getMonthsLocale(value)) : null;\n      var size = fullscreen ? 'default' : 'small';\n      var typeSwitch = React.createElement(_radio.Group, { onChange: this.onTypeChange, value: type, size: size }, React.createElement(_radio.Button, { value: 'date' }, locale.month), React.createElement(_radio.Button, { value: 'month' }, locale.year));\n      return React.createElement('div', { className: prefixCls + '-header', ref: this.getCalenderHeaderNode }, yearSelect, monthSelect, typeSwitch);\n    }\n  }]);\n\n  return Header;\n}(React.Component);\n\nexports.default = Header;\n\n\nHeader.defaultProps = {\n  prefixCls: _Constants.PREFIX_CLS + '-header',\n  yearSelectOffset: 10,\n  yearSelectTotal: 20\n};"},"hash":"d69e2db6876a4ad5babbbf4d8c481692"}