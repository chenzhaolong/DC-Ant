{"dependencies":[{"name":"react"},{"name":"../../libs/Icon/index"},{"name":"./modal.css"}],"generated":{"js":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.Confirm = undefined;\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _react = require(\"react\");\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _index = require(\"../../libs/Icon/index\");\n\nrequire(\"./modal.css\");\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nvar Confirm = exports.Confirm = function (_Component) {\n  _inherits(Confirm, _Component);\n\n  function Confirm(props) {\n    _classCallCheck(this, Confirm);\n\n    var _this = _possibleConstructorReturn(this, (Confirm.__proto__ || Object.getPrototypeOf(Confirm)).call(this, props));\n\n    _this.state = {\n      _show: false\n    };\n    return _this;\n  }\n\n  _createClass(Confirm, [{\n    key: \"_renderHead\",\n    value: function _renderHead(title, type) {\n      return _react2.default.createElement(\n        \"header\",\n        null,\n        _react2.default.createElement(_index.Icon, { type: type, width: \"26px\", height: \"26px\" }),\n        _react2.default.createElement(\n          \"span\",\n          { style: { verticalAlign: 'top', marginLeft: '14px' } },\n          title\n        )\n      );\n    }\n  }, {\n    key: \"_clickHandle\",\n    value: function _clickHandle(e) {\n      var target = e.target;\n      if (target.title == 'cancel') {\n        this.props.onCancel();\n      } else {\n        this.props.onSure();\n      }\n      this.props.removeRootElement('confirm');\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _props = this.props,\n          title = _props.title,\n          content = _props.content,\n          _props$type = _props.type,\n          type = _props$type === undefined ? 'question' : _props$type,\n          _props$musk = _props.musk,\n          musk = _props$musk === undefined ? true : _props$musk;\n\n      return _react2.default.createElement(\n        \"div\",\n        null,\n        musk ? _react2.default.createElement(\"div\", { className: \"dc-modal_musk\" }) : '',\n        _react2.default.createElement(\n          \"article\",\n          { className: \"dc-modal__content dc-confirm_content\" },\n          title ? this._renderHead(title, type) : '',\n          _react2.default.createElement(\n            \"div\",\n            { className: \"dc-confirm__text\" },\n            content\n          ),\n          _react2.default.createElement(\n            \"footer\",\n            { className: \"dc-modal__footer\", onClick: this._clickHandle.bind(this) },\n            type == \"question\" ? _react2.default.createElement(\n              \"span\",\n              { className: \"dc-modal-btn\", title: \"cancel\" },\n              \"\\u5173\\u95ED\"\n            ) : '',\n            _react2.default.createElement(\n              \"span\",\n              { className: \"dc-modal-btn dc-modal_sure\", title: \"sure\" },\n              \"\\u786E\\u5B9A\"\n            )\n          )\n        )\n      );\n    }\n  }]);\n\n  return Confirm;\n}(_react.Component);"},"hash":"97e0611330e48d9aaa88df97aae86df5"}