{"dependencies":[{"name":"react"},{"name":"./switch.css"},{"name":"prop-types"}],"generated":{"js":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.Switch = undefined;\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _react = require(\"react\");\n\nvar _react2 = _interopRequireDefault(_react);\n\nrequire(\"./switch.css\");\n\nvar _propTypes = require(\"prop-types\");\n\nvar _propTypes2 = _interopRequireDefault(_propTypes);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nvar Switch = exports.Switch = function (_Component) {\n  _inherits(Switch, _Component);\n\n  function Switch(props) {\n    _classCallCheck(this, Switch);\n\n    var _this = _possibleConstructorReturn(this, (Switch.__proto__ || Object.getPrototypeOf(Switch)).call(this, props));\n\n    var defaultChecked = _this.props.defaultChecked;\n\n    _this.state = {\n      defaultClass: ['dc-switch-circle'],\n      checkValue: defaultChecked,\n      first: true\n    };\n    return _this;\n  }\n\n  _createClass(Switch, [{\n    key: \"_swimBetween\",\n    value: function _swimBetween(e) {\n      var _this2 = this;\n\n      var _state = this.state,\n          defaultClass = _state.defaultClass,\n          checkValue = _state.checkValue;\n\n      if (checkValue) {\n        checkValue = false;\n        if (defaultClass.indexOf('dc-switch-true')) defaultClass.splice(1, 1);\n        defaultClass.push('dc-switch-false');\n        this.refs.span.style.left = '0px';\n      } else {\n        checkValue = true;\n        if (defaultClass.indexOf('dc-switch-false')) defaultClass.splice(1, 1);\n        defaultClass.push('dc-switch-true');\n        this.refs.span.style.left = '21px';\n      }\n      this.setState({ defaultClass: defaultClass, checkValue: checkValue }, function () {\n        _this2.props.onChange(_this2.state.checkValue);\n      });\n    }\n  }, {\n    key: \"_switchBg\",\n    value: function _switchBg(checkValue) {\n      var classes = ['dc-switch'];\n      if (checkValue) {\n        classes.push('dc-switch-checked');\n      } else {\n        classes.splice(1, 1);\n      }\n      return classes.join(' ');\n    }\n  }, {\n    key: \"_defaultStyle\",\n    value: function _defaultStyle() {\n      if (this.props.defaultChecked && this.state.first) {\n        this.refs.span.style.left = '21px';\n      }\n      this.setState({ first: false });\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this._defaultStyle();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _state2 = this.state,\n          defaultClass = _state2.defaultClass,\n          checkValue = _state2.checkValue;\n      var _props = this.props,\n          checkTxt = _props.checkTxt,\n          unCheckTxt = _props.unCheckTxt;\n\n      var _classes = this._switchBg(checkValue);\n      return _react2.default.createElement(\n        \"div\",\n        { className: _classes, onClick: this._swimBetween.bind(this) },\n        checkValue && checkTxt && _react2.default.createElement(\n          \"span\",\n          { className: \"dc-switch-checktxt\" },\n          checkTxt\n        ),\n        _react2.default.createElement(\"span\", {\n          className: defaultClass.join(' '),\n          ref: \"span\",\n          title: \"right\"\n        }),\n        !checkValue && unCheckTxt && _react2.default.createElement(\n          \"span\",\n          { className: \"dc-switch-unchecktxt\" },\n          unCheckTxt\n        )\n      );\n    }\n  }]);\n\n  return Switch;\n}(_react.Component);\n\nSwitch.propTypes = {\n  defaultChecked: _propTypes2.default.bool.isRequired\n};"},"hash":"70af338d4b5ffcae943b21cd25a87da9"}