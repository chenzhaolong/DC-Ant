{"dependencies":[{"name":"react"},{"name":"./switch.css"}],"generated":{"js":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.Switch = undefined;\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _react = require(\"react\");\n\nvar _react2 = _interopRequireDefault(_react);\n\nrequire(\"./switch.css\");\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nvar Switch = exports.Switch = function (_Component) {\n  _inherits(Switch, _Component);\n\n  function Switch(props) {\n    _classCallCheck(this, Switch);\n\n    var _this = _possibleConstructorReturn(this, (Switch.__proto__ || Object.getPrototypeOf(Switch)).call(this, props));\n\n    var defaultChecked = _this.props.defaultChecked;\n\n    _this.state = {\n      defaultClass: ['dc-switch-circle'],\n      status: { Right: defaultChecked, Left: !defaultChecked }\n    };\n    return _this;\n  }\n\n  _createClass(Switch, [{\n    key: \"_switchBetween\",\n    value: function _switchBetween(e) {\n      var _state = this.state,\n          defaultClass = _state.defaultClass,\n          status = _state.status;\n\n      if (status.Left) {\n        status = { Right: true, Left: false };\n        if (defaultClass.indexOf('dc-switch-false')) defaultClass.splice(1, 1);\n        defaultClass.push('dc-switch-true');\n      } else {\n        status = { Right: false, Left: true };\n        if (defaultClass.indexOf('dc-switch-true')) defaultClass.splice(1, 1);\n        defaultClass.push('dc-switch-false');\n      }\n      this.setState({ defaultClass: defaultClass, status: status });\n    }\n  }, {\n    key: \"_switchBg\",\n    value: function _switchBg(status) {\n      var classes = ['dc-switch'];\n      if (status.Right) {\n        classes.push('dc-switch-checked');\n      } else {\n        classes.splice(1, 1);\n      }\n      return classes.join(' ');\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _state2 = this.state,\n          defaultClass = _state2.defaultClass,\n          status = _state2.status;\n\n      var _classes = this._switchBg(status);\n      return _react2.default.createElement(\n        \"div\",\n        { className: _classes, onClick: this._switchBetween.bind(this) },\n        _react2.default.createElement(\"span\", {\n          className: defaultClass.join(' ')\n        })\n      );\n    }\n  }]);\n\n  return Switch;\n}(_react.Component);"},"hash":"01a516fff131284863ac5169a5c81ba1"}